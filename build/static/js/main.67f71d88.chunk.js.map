{"version":3,"sources":["components/Navbar.jsx","components/App.jsx","index.js"],"names":["NavBar","className","App","useState","Date","startDate","setStartDate","endDate","setEndDate","symbol","setSymbol","data","setData","DatePick","selected","onChange","date","selectsStart","selectsEnd","minDate","ChartJS","props","forEach","d","console","log","type","width","ratio","data1","height","margin","left","right","top","bottom","seriesName","xAccessor","xScale","scaleTime","xExtents","id","yExtents","high","low","axisAt","orient","ticks","timeIntervalBarWidth","utcDay","CreateChart","chartsToDisplay","setChartsToDisplay","getData","a","charts","push","useEffect","Description","data2","setData2","str","symb","fetch","then","response","json","datas","description","prototype","PropTypes","array","isRequired","number","oneOf","defaultProps","fitWidth","value","e","target","placeholder","start","getFullYear","toString","getMonth","getDate","end","method","headers","body","JSON","stringify","preventDefault","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67f71d88.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction NavBar()\r\n{\r\n    return <nav className=\"navbar navbar-expand-lg navbar-light bg-warning titlebar\">\r\n    <div className=\"container-fluid\">\r\n      <h1>Stock App</h1>\r\n\r\n    </div>\r\n  </nav>;\r\n}\r\nexport default NavBar;","import React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"./Navbar\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport { utcDay } from \"d3-time\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\r\nimport PropTypes from \"prop-types\";\r\nimport { scaleTime } from \"d3-scale\";\r\n\r\nfunction App()\r\n{ const [startDate, setStartDate] = useState(new Date(\"2021/01/01\"));\r\nconst [endDate, setEndDate] = useState(new Date(\"2021/08/20\"));\r\nconst[symbol,setSymbol]=useState(\"\");\r\nconst[data,setData]=useState([]);\r\n    function DatePick() {\r\n       \r\n        return (\r\n          <div className=\"datepicker\">\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              selectsStart\r\n              startDate={startDate}\r\n              endDate={endDate}\r\n            />\r\n            <DatePicker\r\n              selected={endDate}\r\n              onChange={(date) => setEndDate(date)}\r\n              selectsEnd\r\n              startDate={startDate}\r\n              endDate={endDate}\r\n              minDate={startDate}\r\n            />\r\n    \r\n          </div>\r\n        );\r\n      };\r\nfunction handleClick(e)\r\n{\r\n    const start= startDate.getFullYear().toString()+'-'+ (startDate.getMonth()+1>=10?(startDate.getMonth()+1).toString():('0'+(startDate.getMonth()+1).toString())) +'-'+(startDate.getDate()>=10?(startDate.getDate()).toString():('0'+(startDate.getDate()).toString()));\r\n    const end=  endDate.getFullYear().toString()+'-'+ (endDate.getMonth()+1>=10?(endDate.getMonth()+1).toString():('0'+(endDate.getMonth()+1).toString())) +'-'+(endDate.getDate()>=10?(endDate.getDate()).toString():('0'+(endDate.getDate()).toString()));\r\n    // console.log(end);\r\n    const a={symbol:symbol,start:start,end:end};\r\n    \r\n    fetch(\"https://stocks-fariz.herokuapp.com/\",{method:'POST', headers: {\"Content-Type\": \"application/json\"},body:JSON.stringify(a)})\r\n    .then(function(response){\r\n       return response.json();\r\n    }).then(function(datas){\r\n      setData(datas);\r\n    //   console.log(datas);\r\n    });\r\n    \r\n    e.preventDefault();\r\n}\r\n\r\n\r\nlet ChartJS = (props) => {\r\n    data.forEach((d)=>{\r\n        \r\n        d.date=new Date(d.date);\r\n    });\r\n    console.log(data);\r\n    const { type, width, ratio } = props;\r\n    const data1 = data;\r\n    const xAccessor = (d) => {\r\n      if(d)\r\n      {\r\n          return d.date;}\r\n    };\r\n    return (\r\n      <div className=\"ChartJS\">\r\n        <ChartCanvas\r\n          height={400}\r\n          ratio={ratio}\r\n          width={width}\r\n          margin={{ left: 50, right: 50, top: 10, bottom: 30 }}\r\n          type={type}\r\n          data={data1}\r\n          seriesName=\"MSFT\"\r\n          xAccessor={xAccessor}\r\n          xScale={scaleTime()}\r\n          xExtents={[new Date(2021, 0, 4), new Date(2021, 1, 10)]}\r\n        >\r\n          <Chart id={1} yExtents={(d) => [d.high, d.low]}>\r\n            <XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6} />\r\n            <YAxis axisAt=\"left\" orient=\"left\" ticks={5} />\r\n            <CandlestickSeries width={timeIntervalBarWidth(utcDay)} />\r\n          </Chart>\r\n        </ChartCanvas>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  ChartJS.prototype = {\r\n    data: PropTypes.array.isRequired,\r\n    width: PropTypes.number.isRequired,\r\n    ratio: PropTypes.number.isRequired,\r\n    type: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\r\n  };\r\n  \r\n  ChartJS.defaultProps = {\r\n    type: \"svg\",\r\n  };\r\n  \r\n  ChartJS = fitWidth(ChartJS);\r\n\r\n   function CreateChart() {\r\n    const [chartsToDisplay, setChartsToDisplay] = useState([]);\r\n  \r\n    const getData = async () => {\r\n      const charts = [];\r\n      charts.push(<ChartJS key={1} data={data} />);\r\n      setChartsToDisplay(charts);\r\n    };\r\n  \r\n    useEffect(() => {\r\n      getData();\r\n    }, []);\r\n  \r\n    return <div className=\"App\">{chartsToDisplay}</div>;\r\n  };\r\n  \r\nfunction Description(props)\r\n{\r\n    const [data2,setData2]=useState({});\r\n    let str=\"https://cloud.iexapis.com/stable/stock/\"+props.symb+\"/company?token=pk_83b319dbd5f8410f8939ed90ce28924d\";\r\n    \r\n    fetch(str)\r\n    .then(function(response){\r\n       return response.json();\r\n    }).then(function(datas){\r\n      setData2(datas);\r\n    //   console.log(datas);\r\n    });\r\n    return <div className=\"description\">\r\n    <h2>Description</h2>\r\n        {data2.description}\r\n    </div>\r\n}\r\n\r\n\r\n    return <div>\r\n <NavBar/>\r\n   <div className=\"symbol\"> <input type=\"text\" value={symbol} onChange={(e)=>setSymbol(e.target.value)} className=\"form-control form-control-lg symbol-input\" placeholder=\"enter symbol\" /> </div> \r\n   \r\n    <DatePick  />\r\n    <button type=\"button\" type=\"submit\" onClick={handleClick} className=\"btn btn-primary enter-btn\">Enter</button>\r\n    {data.length!=0?<CreateChart/>:<p></p> }\r\n    {data.length!=0?<Description symb={symbol}/>:<p></p> }\r\n    <footer className=\"foot\"> </footer>\r\n        </div>\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from \"./components/App\";\n\n\nReactDOM.render(\n  \n    <App />\n ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}